name: Run API Tests and Merge

on:
  push:
    branches-ignore: [main]

jobs:
  test-and-merge:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: gymtrack
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Dependencies
        run: |
          cd api
          npm install

      - name: Fix permission for sequelize-cli
        run: chmod +x ./node_modules/.bin/sequelize-cli
        working-directory: api

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Setup Database
        run: |
          cd api
          NODE_ENV=development npx sequelize-cli db:create || echo "Database already exists"
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: gymtrack
          DB_USER: postgres
          DB_PASSWORD: root

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Robot Framework
        run: |
          pip install robotframework
          pip install robotframework-requests

      - name: Start API Server
        run: |
          cd api
          npm run start &
          sleep 5
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: gymtrack
          DB_USER: postgres
          DB_PASSWORD: root

      - name: Run Robot Tests
        run: |
          cd api
          npm run test:robot
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: gymtrack
          DB_USER: postgres
          DB_PASSWORD: root

      - name: Merge to main if tests passed
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Verifica se jÃ¡ existe PR aberta da branch atual para main
          gh pr list --base main --head ${{ github.ref_name }} --state open --json number -q '.[0].number' > pr_number.txt || true
          PR_NUMBER=$(cat pr_number.txt)

          if [ -z "$PR_NUMBER" ]; then
            echo "Creating new PR..."
            gh pr create --fill --base main --head ${{ github.ref_name }}
            PR_NUMBER=$(gh pr list --base main --head ${{ github.ref_name }} --state open --json number -q '.[0].number')
          else
            echo "PR already exists: #$PR_NUMBER"
          fi

          echo "Merging PR #$PR_NUMBER..."
          gh pr merge "$PR_NUMBER" --squash --admin --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
